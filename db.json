{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/apollo/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/apollo/source/css/apollo.css","path":"css/apollo.css","modified":0,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff","path":"font/sourcesanspro.woff","modified":0,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","path":"font/sourcesanspro.woff2","modified":0,"renderable":1},{"_id":"themes/apollo/source/scss/apollo.scss","path":"scss/apollo.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/How-to-change-icons-in-AstroNvim-on-Ubuntu.md","hash":"c86b076bb6d5d9a1e38b0247d24c987375fe4f03","modified":1681718107970},{"_id":"source/_posts/Simple-Bank-Lecture-07-DB-Trasaction-Lock.md","hash":"3621213a1a91373e8c6227c70e55ac31757d15c1","modified":1681733841855},{"_id":"source/_posts/Simple-Bank-Lecture-08-Avoid-Deadlock.md","hash":"9fbca2747535520d67315560f6c5f04efc16369e","modified":1681733974217},{"_id":"source/_posts/Simple-Bank-Lecture-09-Isolation-Level.md","hash":"d7ce9c9f5284faea4bca59c42a1baf608855f60d","modified":1681734000832},{"_id":"source/_posts/Simple-Bank-Lecture-11-RESTful-API-with-GIN.md","hash":"b9a6fef43c6d48b92753a20e55538f4769857cd3","modified":1681733737109},{"_id":"source/_posts/Simple-Bank-Lecture-12-Load-Config-By-Viper.md","hash":"48cd21400bbcbefb36fdfed6307504080c61d8cc","modified":1681741578634},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1681567255160},{"_id":"themes/apollo/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1681742534976},{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1681742534976},{"_id":"themes/apollo/README.md","hash":"b2cdcb158721c13eee6a2ae237d0488a738ed8c5","modified":1681742534976},{"_id":"themes/apollo/_config.yml","hash":"261de70c54a5b6bac83afc8e1a77bbd715fae547","modified":1681742534976},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1681742534976},{"_id":"themes/apollo/package.json","hash":"eb1e76ec0b7ed6c6c7b2bd32b4f1e1bbe15800ca","modified":1681742534976},{"_id":"themes/apollo/doc/doc-en.md","hash":"409e931a444c02a57b64a0a44dde6e66c1881ca0","modified":1681742534976},{"_id":"themes/apollo/doc/doc-zh.md","hash":"2a6a81840cdaf497969268a12d8f62c98cc38103","modified":1681742534976},{"_id":"themes/apollo/languages/en.yml","hash":"ca168b190932229884db1de755ec2f793c758a16","modified":1681742534976},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"22a2d16fe8c0dddb016b5325b9b9c182a1b49ae1","modified":1681742534976},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1681742534976},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1681742534976},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1681742534976},{"_id":"themes/apollo/source/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1681742534976},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1681742534976},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"f23c6c40e14cdf16783b3c2baf736c9dce18408c","modified":1681742534976},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"ff0a2c269c2434da2ac5529872f1d6184a71f96d","modified":1681742534976},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"217f8b17054e5079f2d30bb7e2e4e36c0f2161b7","modified":1681742534976},{"_id":"themes/apollo/layout/partial/head.jade","hash":"43d2db73f0247a9a3ed00ecb95b537a872b7201a","modified":1681742534976},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"529c2ec06cfbc3d5b6d66dd320db50dfab5577a6","modified":1681742534976},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1681742534976},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"6bff591ae3d1ff6750f239c4c933ad61f009f36a","modified":1681742534976},{"_id":"themes/apollo/source/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1681742534976},{"_id":"themes/apollo/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1681742534976},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1681742534976},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1681742534980},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"ae967b2049ecb9b8c4e139ecce32fd9fb5358ac5","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"153bde88bf8ffeae4ffd813d8cc694dd83d33d94","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"6b5c59f3d2295944f934aee2c1156012a3306d5d","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"fc5dda52cfbb10e27e2471e03f4606fb3d588225","modified":1681742534976},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1681742534980},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"1998f207541a2590a5624549f96c5e65d136690a","modified":1681742534980},{"_id":"public/atom.xml","hash":"eec9ba4c246cc3b4e66c3d91d8daf8d9d8a4c810","modified":1681744083880},{"_id":"public/sitemap.xml","hash":"c8570aed197e60778bb28c3b72cce375650d35ea","modified":1681744083880},{"_id":"public/sitemap.txt","hash":"b9f250405c3c87d31c2a3d24052b1c4e2efb6514","modified":1681744083880},{"_id":"public/2023/04/17/Simple-Bank-Lecture-12-Load-Config-By-Viper/index.html","hash":"354bd31824ab457c51ed68f3578e89d2ca7648fb","modified":1681744083880},{"_id":"public/2023/04/17/Simple-Bank-Lecture-11-RESTful-API-with-GIN/index.html","hash":"3927343679c7fc953ed92387a163ff5afdf8785c","modified":1681744083880},{"_id":"public/2023/04/17/Simple-Bank-Lecture-09-Isolation-Level/index.html","hash":"091b8acba16338e8859f03a2b36d5e71814d8068","modified":1681744083880},{"_id":"public/2023/04/17/Simple-Bank-Lecture-08-Avoid-Deadlock/index.html","hash":"6c25e4597a61ec460aaf4e014e0c9526e578708f","modified":1681744083880},{"_id":"public/2023/04/17/Simple-Bank-Lecture-07-DB-Trasaction-Lock/index.html","hash":"67a13070ff2a46a1e5c0c8ebb34c652d62c8a071","modified":1681744083880},{"_id":"public/2023/04/16/How-to-change-icons-in-AstroNvim-on-Ubuntu/index.html","hash":"4646b9f27c9eedca576e9e6e7f9991f673ea8be8","modified":1681744083880},{"_id":"public/2023/04/15/hello-world/index.html","hash":"1af4fb29b9b766fe304e41bba70f884abde12c7f","modified":1681744083880},{"_id":"public/archives/index.html","hash":"aaec17f4b593fbc57d4658deca79b3f36a1d9f83","modified":1681744083880},{"_id":"public/index.html","hash":"92e1f4eeb214d7234454d8cb317e8816926f8a0a","modified":1681744083880},{"_id":"public/tags/nvim/index.html","hash":"f103952b4a8d89454d5946e3747f038a4c24c5e0","modified":1681744083880},{"_id":"public/tags/simple-bank-backend/index.html","hash":"1379c6950aa709bbaaf0ca1eb86dffb2b8387a19","modified":1681744083880},{"_id":"public/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1681744083880},{"_id":"public/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1681744083880},{"_id":"public/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1681744083880},{"_id":"public/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1681744083880},{"_id":"public/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1681744083880}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"How to change icons in AstroNvim on Ubuntu","date":"2023-04-16T07:28:25.000Z","_content":"\nIf you are new to [AstroNvim](https://github.com/AstroNvim/AstroNvim), and haven't installed any fonts on you linux, the default icons in AstroNvim might not be recongnized.\n\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/rauPWx3.png\" />\n\n\n## Install Nerd Fonts on Linux\n\nChoose the font you like (I choose DejaVuSansMono), download it on [Nerd Fonts](https://www.nerdfonts.com/font-downloads) and unzip the compressed file.\n\nThen, install the fonts on linux:\n```bash\nunzip DejaVuSansMono.zip\ncp -r DejaVuSansMono/* ~/.local/share/fonts/\n```\n\nUpdate the font-cache:\n```\nfc-cache -fv\n```\n\nChange the fonts for terminal:\n\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/BYnpgVJ.png\"/>\n\n## Change Config File in Nvim\n\nGo to nvim config directory:\n```bash\ncd ~/.config/nvim/user\n```\n\nChange `icons_enabled` to `true` in the `init.lua` file:\n```lua\nreturn {\n  options = {\n    g = {\n      icons_enabled = true,\n    },\n  },\n}\n```\n\nSince nerd fonts is installed, the icons should be working right now.\n\nSee the official [Doc](https://astronvim.com/Recipes/icons) for more details.\n\n","source":"_posts/How-to-change-icons-in-AstroNvim-on-Ubuntu.md","raw":"---\ntitle: How to change icons in AstroNvim on Ubuntu\ndate: 2023-04-16 15:28:25\ntags: nvim\n---\n\nIf you are new to [AstroNvim](https://github.com/AstroNvim/AstroNvim), and haven't installed any fonts on you linux, the default icons in AstroNvim might not be recongnized.\n\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/rauPWx3.png\" />\n\n\n## Install Nerd Fonts on Linux\n\nChoose the font you like (I choose DejaVuSansMono), download it on [Nerd Fonts](https://www.nerdfonts.com/font-downloads) and unzip the compressed file.\n\nThen, install the fonts on linux:\n```bash\nunzip DejaVuSansMono.zip\ncp -r DejaVuSansMono/* ~/.local/share/fonts/\n```\n\nUpdate the font-cache:\n```\nfc-cache -fv\n```\n\nChange the fonts for terminal:\n\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/BYnpgVJ.png\"/>\n\n## Change Config File in Nvim\n\nGo to nvim config directory:\n```bash\ncd ~/.config/nvim/user\n```\n\nChange `icons_enabled` to `true` in the `init.lua` file:\n```lua\nreturn {\n  options = {\n    g = {\n      icons_enabled = true,\n    },\n  },\n}\n```\n\nSince nerd fonts is installed, the icons should be working right now.\n\nSee the official [Doc](https://astronvim.com/Recipes/icons) for more details.\n\n","slug":"How-to-change-icons-in-AstroNvim-on-Ubuntu","published":1,"updated":"2023-04-17T07:55:07.970Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cp0000hhxg33jh8j3p","content":"<p>If you are new to <a href=\"https://github.com/AstroNvim/AstroNvim\">AstroNvim</a>, and haven’t installed any fonts on you linux, the default icons in AstroNvim might not be recongnized.</p>\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/rauPWx3.png\" />\n\n\n<h2 id=\"Install-Nerd-Fonts-on-Linux\"><a href=\"#Install-Nerd-Fonts-on-Linux\" class=\"headerlink\" title=\"Install Nerd Fonts on Linux\"></a>Install Nerd Fonts on Linux</h2><p>Choose the font you like (I choose DejaVuSansMono), download it on <a href=\"https://www.nerdfonts.com/font-downloads\">Nerd Fonts</a> and unzip the compressed file.</p>\n<p>Then, install the fonts on linux:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip DejaVuSansMono.zip</span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r DejaVuSansMono/* ~/.local/share/fonts/</span><br></pre></td></tr></table></figure>\n\n<p>Update the font-cache:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fc-cache -fv</span><br></pre></td></tr></table></figure>\n\n<p>Change the fonts for terminal:</p>\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/BYnpgVJ.png\"/>\n\n<h2 id=\"Change-Config-File-in-Nvim\"><a href=\"#Change-Config-File-in-Nvim\" class=\"headerlink\" title=\"Change Config File in Nvim\"></a>Change Config File in Nvim</h2><p>Go to nvim config directory:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.config/nvim/user</span><br></pre></td></tr></table></figure>\n\n<p>Change <code>icons_enabled</code> to <code>true</code> in the <code>init.lua</code> file:</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">  options = &#123;</span><br><span class=\"line\">    g = &#123;</span><br><span class=\"line\">      icons_enabled = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Since nerd fonts is installed, the icons should be working right now.</p>\n<p>See the official <a href=\"https://astronvim.com/Recipes/icons\">Doc</a> for more details.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>If you are new to <a href=\"https://github.com/AstroNvim/AstroNvim\">AstroNvim</a>, and haven’t installed any fonts on you linux, the default icons in AstroNvim might not be recongnized.</p>\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/rauPWx3.png\" />\n\n\n<h2 id=\"Install-Nerd-Fonts-on-Linux\"><a href=\"#Install-Nerd-Fonts-on-Linux\" class=\"headerlink\" title=\"Install Nerd Fonts on Linux\"></a>Install Nerd Fonts on Linux</h2><p>Choose the font you like (I choose DejaVuSansMono), download it on <a href=\"https://www.nerdfonts.com/font-downloads\">Nerd Fonts</a> and unzip the compressed file.</p>\n<p>Then, install the fonts on linux:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip DejaVuSansMono.zip</span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r DejaVuSansMono/* ~/.local/share/fonts/</span><br></pre></td></tr></table></figure>\n\n<p>Update the font-cache:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fc-cache -fv</span><br></pre></td></tr></table></figure>\n\n<p>Change the fonts for terminal:</p>\n<img style=\"display: block; margin: auto;\" src=\"https://i.imgur.com/BYnpgVJ.png\"/>\n\n<h2 id=\"Change-Config-File-in-Nvim\"><a href=\"#Change-Config-File-in-Nvim\" class=\"headerlink\" title=\"Change Config File in Nvim\"></a>Change Config File in Nvim</h2><p>Go to nvim config directory:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.config/nvim/user</span><br></pre></td></tr></table></figure>\n\n<p>Change <code>icons_enabled</code> to <code>true</code> in the <code>init.lua</code> file:</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">  options = &#123;</span><br><span class=\"line\">    g = &#123;</span><br><span class=\"line\">      icons_enabled = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Since nerd fonts is installed, the icons should be working right now.</p>\n<p>See the official <a href=\"https://astronvim.com/Recipes/icons\">Doc</a> for more details.</p>\n"},{"title":"Simple Bank, Lecture 07 - DB Trasaction Lock","date":"2023-04-17T12:11:15.000Z","_content":"\n```sql\n-- name: GetAccount :one\nSELECT * FROM accounts\nWHERE id = $1 LIMIT 1;\n```\n\n加上\n\n- **FOR UPDATE**\n    - 因為同時會有很多transaction去更新(select) account\n    - 若一個account被select, 但不block其他select account, 則account可能會無法被正確更新\n    - 加上FOR UPDATE: block其他query\n        - 這個query select的東西會被update, 所以sql會先block它\n\n- FOR **NO KEY** UPDATE\n    - 因為primary key不會update\n    - 告訴db說不要因為primary key被使用就block其他query\n\n```sql\n-- name: GetAccountForUpdate :one\nSELECT * FROM accounts\nWHERE id = $1 LIMIT 1\nFOR NO KEY UPDATE;\n```\n","source":"_posts/Simple-Bank-Lecture-07-DB-Trasaction-Lock.md","raw":"---\ntitle: Simple Bank, Lecture 07 - DB Trasaction Lock\ndate: 2023-04-17 20:11:15\ntags: simple-bank, backend\n---\n\n```sql\n-- name: GetAccount :one\nSELECT * FROM accounts\nWHERE id = $1 LIMIT 1;\n```\n\n加上\n\n- **FOR UPDATE**\n    - 因為同時會有很多transaction去更新(select) account\n    - 若一個account被select, 但不block其他select account, 則account可能會無法被正確更新\n    - 加上FOR UPDATE: block其他query\n        - 這個query select的東西會被update, 所以sql會先block它\n\n- FOR **NO KEY** UPDATE\n    - 因為primary key不會update\n    - 告訴db說不要因為primary key被使用就block其他query\n\n```sql\n-- name: GetAccountForUpdate :one\nSELECT * FROM accounts\nWHERE id = $1 LIMIT 1\nFOR NO KEY UPDATE;\n```\n","slug":"Simple-Bank-Lecture-07-DB-Trasaction-Lock","published":1,"updated":"2023-04-17T12:17:21.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08ct0001hhxg9xe9bujn","content":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- name: GetAccount :one</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> accounts</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> $<span class=\"number\">1</span> LIMIT <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>加上</p>\n<ul>\n<li><p><strong>FOR UPDATE</strong></p>\n<ul>\n<li>因為同時會有很多transaction去更新(select) account</li>\n<li>若一個account被select, 但不block其他select account, 則account可能會無法被正確更新</li>\n<li>加上FOR UPDATE: block其他query<ul>\n<li>這個query select的東西會被update, 所以sql會先block它</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>FOR <strong>NO KEY</strong> UPDATE</p>\n<ul>\n<li>因為primary key不會update</li>\n<li>告訴db說不要因為primary key被使用就block其他query</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- name: GetAccountForUpdate :one</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> accounts</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> $<span class=\"number\">1</span> LIMIT <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">NO</span> KEY <span class=\"keyword\">UPDATE</span>;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- name: GetAccount :one</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> accounts</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> $<span class=\"number\">1</span> LIMIT <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>加上</p>\n<ul>\n<li><p><strong>FOR UPDATE</strong></p>\n<ul>\n<li>因為同時會有很多transaction去更新(select) account</li>\n<li>若一個account被select, 但不block其他select account, 則account可能會無法被正確更新</li>\n<li>加上FOR UPDATE: block其他query<ul>\n<li>這個query select的東西會被update, 所以sql會先block它</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>FOR <strong>NO KEY</strong> UPDATE</p>\n<ul>\n<li>因為primary key不會update</li>\n<li>告訴db說不要因為primary key被使用就block其他query</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- name: GetAccountForUpdate :one</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> accounts</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> $<span class=\"number\">1</span> LIMIT <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">NO</span> KEY <span class=\"keyword\">UPDATE</span>;</span><br></pre></td></tr></table></figure>\n"},{"title":"Simple Bank, Lecture 08 - Avoid Deadlock","date":"2023-04-17T12:12:09.000Z","_content":"avoid:\n\n- transaction 1:\n    - update id 1\n    - update id 2\n- transaction 2:\n    - update id 2\n    - update id 1\n\n**deadlock**!!\n\nchange to:\n\n- transaction 1:\n    - update id 1\n    - update id 2\n- transaction 2:\n    - update id 1\n    - update id 2\n\n依照固定的order來更新id (小的先更新\n","source":"_posts/Simple-Bank-Lecture-08-Avoid-Deadlock.md","raw":"---\ntitle: Simple Bank, Lecture 08 - Avoid Deadlock\ndate: 2023-04-17 20:12:09\ntags: simple-bank, backend\n---\navoid:\n\n- transaction 1:\n    - update id 1\n    - update id 2\n- transaction 2:\n    - update id 2\n    - update id 1\n\n**deadlock**!!\n\nchange to:\n\n- transaction 1:\n    - update id 1\n    - update id 2\n- transaction 2:\n    - update id 1\n    - update id 2\n\n依照固定的order來更新id (小的先更新\n","slug":"Simple-Bank-Lecture-08-Avoid-Deadlock","published":1,"updated":"2023-04-17T12:19:34.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cw0003hhxg1v0d3t8s","content":"<p>avoid:</p>\n<ul>\n<li>transaction 1:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n<li>transaction 2:<ul>\n<li>update id 2</li>\n<li>update id 1</li>\n</ul>\n</li>\n</ul>\n<p><strong>deadlock</strong>!!</p>\n<p>change to:</p>\n<ul>\n<li>transaction 1:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n<li>transaction 2:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n</ul>\n<p>依照固定的order來更新id (小的先更新</p>\n","site":{"data":{}},"excerpt":"","more":"<p>avoid:</p>\n<ul>\n<li>transaction 1:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n<li>transaction 2:<ul>\n<li>update id 2</li>\n<li>update id 1</li>\n</ul>\n</li>\n</ul>\n<p><strong>deadlock</strong>!!</p>\n<p>change to:</p>\n<ul>\n<li>transaction 1:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n<li>transaction 2:<ul>\n<li>update id 1</li>\n<li>update id 2</li>\n</ul>\n</li>\n</ul>\n<p>依照固定的order來更新id (小的先更新</p>\n"},{"title":"Simple Bank, Lecture 09 - Isolation Level","date":"2023-04-17T12:13:50.000Z","_content":"\nA database transaction should follow the **ACID** property:\n\n- Atomicity\n    - 要馬所有operation都要成功完成, 不然transaction fail且db保持不變\n- Isolation\n    - Concurrent transactions必不會互相影響\n- Consistency\n    - 在transaction完成之後, db state必須要是valid的\n- Durability\n    - data written by a successful transaction must be recorded in persistent storage\n\n其中, 有一些 **Read Phenomena** 會影響到 Isolation property:\n\n- Dirty Read\n    - 一個transaction會讀到其他transaction uncommitted的data\n- Non-repeatable Read\n    - 一個transaction重複讀了兩次data卻發現data被修改過(by another **committed** transaction)\n- Phantom(幻象) Read\n    - 一個transaction重複搜尋了兩次相同的條件卻得到不同的rows (due to another recently **committed** transaction)\n- serialization anomaly\n    - 若將所有的transaction sequentially run, 不可能會得到正確的結果\n\n4 Standard **Isolation Levels** are defined by ANSI:\n\n- Read uncommitted\n    - 可以看到尚未被commit的data\n- Read Committed\n    - 只能看到被commit過後的data (avoid dirty read)\n- Repeatable read\n    - 一樣的select query會回傳同樣結果 (avoid non-repeatable & phantom read)\n- serializable\n    - 保證serially的按照某種順序去跑transaction, 結果會跟concurrently跑的結果一樣\n\n(MySQL)\n\n| Isolation Level | Dirty Read | Non-repeatable Read | Phantom Read | Serialization Anomaly |\n| --- | --- | --- | --- | --- |\n| Read Uncommitted | Yes | Yes | Yes | Yes |\n| Read Committed | No | Yes | Yes | Yes |\n| Repeatable Read | No | No | No | Yes |\n| Serializable | No | No | No | No |\n\n(PostgreSQL)\n\n| Isolation Level | Dirty Read | Non-repeatable Read | Phantom Read | Serialization Anomaly |\n| --- | --- | --- | --- | --- |\n| Read Uncommitted | No | Yes | Yes | Yes |\n| Read Committed | No | Yes | Yes | Yes |\n| Repeatable Read | No | No | No | Yes |\n| Serializable | No | No | No | No |\n\nMySQL v.s. PostgreSQL\n\n- MySQL可以設置所有的transaction的isolation level, PostgreSQL只能設定一個transaction的isolation level\n- MySQL\n    - 在serializable, mysql預設會把 SELECT 變成 SELECT FOR SHARE\n        - 若transaction 1去 SELECT * from accounts where id = 1, 則transaction 2要去update account id 1就會被block\n        \n        ```sql\n        T1:\n        \tselect * from accounts where id = 1;\n        T2:\n        \n        ---\n        T1:\n        \n        T2:\n        \tupdate account set balance = balance - 10 where id = 1; \n        ---\n        \n        Transaction 2 would be blocked\n        ```\n        \n        ```sql\n        T1:\n        \tselect * from accounts where id = 1;\n        T2:\n        \n        ---\n        T1:\n        \n        T2:\n        \tupdate account set balance = balance - 10 where id = 1;\n        ---\n        T1:\n        \tupdate account set balance = balance - 10 where id = 1;\n        T2:\n        \n        ---\n        \n        Dead lock would occur, since T2 is waiting T1 to release the lock, \n        while T1 is also waiting to T2\n        ```\n        \n- PostgreSQL\n    - read uncommitted 跟 read committed 一樣\n        - read uncommitted 也不允許 dirty read\n    - repeatable read 可以防止 phantom read\n- 在serializable level 對付serialization anomaly 的方法\n    - PostgreSQL: dependency check, 若相同的query被其他transaction用過, 會發出error\n        \n        ```sql\n        T1:\n        \tselect sum(balance) from accounts; \n        T2:\n        \n        ---\n        \n        T1:\n        \tinsert into accounts(owner, balance, currency) values ('sum', 810, 'USD')\n        T2:\n        \n        ---\n        \n        T1:\n        \n        T2:\n        \tinsert into accounts(owner, balance, currency) values ('sum', 810, 'USD')\n        ---\n        \n        T1:\n        \tcommit; #success\n        T2:\n        \n        ---\n        \n        T1:\n        \n        T2:\n        \tcommit; #fail\n        ---\n        \n        T2 would fail to commit. \n        Since the same insert query has been queried by T2.\n        ```\n        \n    - MySQL: locking mechanism,  用share lock來避免兩個transaction會看到不同的data\n\nRetry Mechanism\n\n- There might be errors, timeout or deadlocks\n\n[https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html)\n\n[https://www.postgresql.org/docs/current/transaction-iso.html](https://www.postgresql.org/docs/current/transaction-iso.html)\n","source":"_posts/Simple-Bank-Lecture-09-Isolation-Level.md","raw":"---\ntitle: Simple Bank, Lecture 09 - Isolation Level\ndate: 2023-04-17 20:13:50\ntags: simple-bank, backend\n---\n\nA database transaction should follow the **ACID** property:\n\n- Atomicity\n    - 要馬所有operation都要成功完成, 不然transaction fail且db保持不變\n- Isolation\n    - Concurrent transactions必不會互相影響\n- Consistency\n    - 在transaction完成之後, db state必須要是valid的\n- Durability\n    - data written by a successful transaction must be recorded in persistent storage\n\n其中, 有一些 **Read Phenomena** 會影響到 Isolation property:\n\n- Dirty Read\n    - 一個transaction會讀到其他transaction uncommitted的data\n- Non-repeatable Read\n    - 一個transaction重複讀了兩次data卻發現data被修改過(by another **committed** transaction)\n- Phantom(幻象) Read\n    - 一個transaction重複搜尋了兩次相同的條件卻得到不同的rows (due to another recently **committed** transaction)\n- serialization anomaly\n    - 若將所有的transaction sequentially run, 不可能會得到正確的結果\n\n4 Standard **Isolation Levels** are defined by ANSI:\n\n- Read uncommitted\n    - 可以看到尚未被commit的data\n- Read Committed\n    - 只能看到被commit過後的data (avoid dirty read)\n- Repeatable read\n    - 一樣的select query會回傳同樣結果 (avoid non-repeatable & phantom read)\n- serializable\n    - 保證serially的按照某種順序去跑transaction, 結果會跟concurrently跑的結果一樣\n\n(MySQL)\n\n| Isolation Level | Dirty Read | Non-repeatable Read | Phantom Read | Serialization Anomaly |\n| --- | --- | --- | --- | --- |\n| Read Uncommitted | Yes | Yes | Yes | Yes |\n| Read Committed | No | Yes | Yes | Yes |\n| Repeatable Read | No | No | No | Yes |\n| Serializable | No | No | No | No |\n\n(PostgreSQL)\n\n| Isolation Level | Dirty Read | Non-repeatable Read | Phantom Read | Serialization Anomaly |\n| --- | --- | --- | --- | --- |\n| Read Uncommitted | No | Yes | Yes | Yes |\n| Read Committed | No | Yes | Yes | Yes |\n| Repeatable Read | No | No | No | Yes |\n| Serializable | No | No | No | No |\n\nMySQL v.s. PostgreSQL\n\n- MySQL可以設置所有的transaction的isolation level, PostgreSQL只能設定一個transaction的isolation level\n- MySQL\n    - 在serializable, mysql預設會把 SELECT 變成 SELECT FOR SHARE\n        - 若transaction 1去 SELECT * from accounts where id = 1, 則transaction 2要去update account id 1就會被block\n        \n        ```sql\n        T1:\n        \tselect * from accounts where id = 1;\n        T2:\n        \n        ---\n        T1:\n        \n        T2:\n        \tupdate account set balance = balance - 10 where id = 1; \n        ---\n        \n        Transaction 2 would be blocked\n        ```\n        \n        ```sql\n        T1:\n        \tselect * from accounts where id = 1;\n        T2:\n        \n        ---\n        T1:\n        \n        T2:\n        \tupdate account set balance = balance - 10 where id = 1;\n        ---\n        T1:\n        \tupdate account set balance = balance - 10 where id = 1;\n        T2:\n        \n        ---\n        \n        Dead lock would occur, since T2 is waiting T1 to release the lock, \n        while T1 is also waiting to T2\n        ```\n        \n- PostgreSQL\n    - read uncommitted 跟 read committed 一樣\n        - read uncommitted 也不允許 dirty read\n    - repeatable read 可以防止 phantom read\n- 在serializable level 對付serialization anomaly 的方法\n    - PostgreSQL: dependency check, 若相同的query被其他transaction用過, 會發出error\n        \n        ```sql\n        T1:\n        \tselect sum(balance) from accounts; \n        T2:\n        \n        ---\n        \n        T1:\n        \tinsert into accounts(owner, balance, currency) values ('sum', 810, 'USD')\n        T2:\n        \n        ---\n        \n        T1:\n        \n        T2:\n        \tinsert into accounts(owner, balance, currency) values ('sum', 810, 'USD')\n        ---\n        \n        T1:\n        \tcommit; #success\n        T2:\n        \n        ---\n        \n        T1:\n        \n        T2:\n        \tcommit; #fail\n        ---\n        \n        T2 would fail to commit. \n        Since the same insert query has been queried by T2.\n        ```\n        \n    - MySQL: locking mechanism,  用share lock來避免兩個transaction會看到不同的data\n\nRetry Mechanism\n\n- There might be errors, timeout or deadlocks\n\n[https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html)\n\n[https://www.postgresql.org/docs/current/transaction-iso.html](https://www.postgresql.org/docs/current/transaction-iso.html)\n","slug":"Simple-Bank-Lecture-09-Isolation-Level","published":1,"updated":"2023-04-17T12:20:00.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cx0004hhxg1p5xcd4w","content":"<p>A database transaction should follow the <strong>ACID</strong> property:</p>\n<ul>\n<li>Atomicity<ul>\n<li>要馬所有operation都要成功完成, 不然transaction fail且db保持不變</li>\n</ul>\n</li>\n<li>Isolation<ul>\n<li>Concurrent transactions必不會互相影響</li>\n</ul>\n</li>\n<li>Consistency<ul>\n<li>在transaction完成之後, db state必須要是valid的</li>\n</ul>\n</li>\n<li>Durability<ul>\n<li>data written by a successful transaction must be recorded in persistent storage</li>\n</ul>\n</li>\n</ul>\n<p>其中, 有一些 <strong>Read Phenomena</strong> 會影響到 Isolation property:</p>\n<ul>\n<li>Dirty Read<ul>\n<li>一個transaction會讀到其他transaction uncommitted的data</li>\n</ul>\n</li>\n<li>Non-repeatable Read<ul>\n<li>一個transaction重複讀了兩次data卻發現data被修改過(by another <strong>committed</strong> transaction)</li>\n</ul>\n</li>\n<li>Phantom(幻象) Read<ul>\n<li>一個transaction重複搜尋了兩次相同的條件卻得到不同的rows (due to another recently <strong>committed</strong> transaction)</li>\n</ul>\n</li>\n<li>serialization anomaly<ul>\n<li>若將所有的transaction sequentially run, 不可能會得到正確的結果</li>\n</ul>\n</li>\n</ul>\n<p>4 Standard <strong>Isolation Levels</strong> are defined by ANSI:</p>\n<ul>\n<li>Read uncommitted<ul>\n<li>可以看到尚未被commit的data</li>\n</ul>\n</li>\n<li>Read Committed<ul>\n<li>只能看到被commit過後的data (avoid dirty read)</li>\n</ul>\n</li>\n<li>Repeatable read<ul>\n<li>一樣的select query會回傳同樣結果 (avoid non-repeatable &amp; phantom read)</li>\n</ul>\n</li>\n<li>serializable<ul>\n<li>保證serially的按照某種順序去跑transaction, 結果會跟concurrently跑的結果一樣</li>\n</ul>\n</li>\n</ul>\n<p>(MySQL)</p>\n<table>\n<thead>\n<tr>\n<th>Isolation Level</th>\n<th>Dirty Read</th>\n<th>Non-repeatable Read</th>\n<th>Phantom Read</th>\n<th>Serialization Anomaly</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Read Uncommitted</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Read Committed</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Repeatable Read</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Serializable</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody></table>\n<p>(PostgreSQL)</p>\n<table>\n<thead>\n<tr>\n<th>Isolation Level</th>\n<th>Dirty Read</th>\n<th>Non-repeatable Read</th>\n<th>Phantom Read</th>\n<th>Serialization Anomaly</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Read Uncommitted</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Read Committed</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Repeatable Read</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Serializable</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody></table>\n<p>MySQL v.s. PostgreSQL</p>\n<ul>\n<li><p>MySQL可以設置所有的transaction的isolation level, PostgreSQL只能設定一個transaction的isolation level</p>\n</li>\n<li><p>MySQL</p>\n<ul>\n<li><p>在serializable, mysql預設會把 SELECT 變成 SELECT FOR SHARE</p>\n<ul>\n<li>若transaction 1去 SELECT * from accounts where id &#x3D; 1, 則transaction 2要去update account id 1就會被block</li>\n</ul>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> accounts <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>; </span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">Transaction <span class=\"number\">2</span> would be blocked</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> accounts <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">Dead lock would occur, since T2 <span class=\"keyword\">is</span> waiting T1 <span class=\"keyword\">to</span> <span class=\"keyword\">release</span> the lock, </span><br><span class=\"line\">while T1 <span class=\"keyword\">is</span> also waiting <span class=\"keyword\">to</span> T2</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>PostgreSQL</p>\n<ul>\n<li>read uncommitted 跟 read committed 一樣<ul>\n<li>read uncommitted 也不允許 dirty read</li>\n</ul>\n</li>\n<li>repeatable read 可以防止 phantom read</li>\n</ul>\n</li>\n<li><p>在serializable level 對付serialization anomaly 的方法</p>\n<ul>\n<li><p>PostgreSQL: dependency check, 若相同的query被其他transaction用過, 會發出error</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"built_in\">sum</span>(balance) <span class=\"keyword\">from</span> accounts; </span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> accounts(owner, balance, currency) <span class=\"keyword\">values</span> (<span class=\"string\">&#x27;sum&#x27;</span>, <span class=\"number\">810</span>, <span class=\"string\">&#x27;USD&#x27;</span>)</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> accounts(owner, balance, currency) <span class=\"keyword\">values</span> (<span class=\"string\">&#x27;sum&#x27;</span>, <span class=\"number\">810</span>, <span class=\"string\">&#x27;USD&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>; #success</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>; #fail</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T2 would fail <span class=\"keyword\">to</span> commit. </span><br><span class=\"line\">Since the same <span class=\"keyword\">insert</span> query has been queried <span class=\"keyword\">by</span> T2.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>MySQL: locking mechanism,  用share lock來避免兩個transaction會看到不同的data</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Retry Mechanism</p>\n<ul>\n<li>There might be errors, timeout or deadlocks</li>\n</ul>\n<p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html\">https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html</a></p>\n<p><a href=\"https://www.postgresql.org/docs/current/transaction-iso.html\">https://www.postgresql.org/docs/current/transaction-iso.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>A database transaction should follow the <strong>ACID</strong> property:</p>\n<ul>\n<li>Atomicity<ul>\n<li>要馬所有operation都要成功完成, 不然transaction fail且db保持不變</li>\n</ul>\n</li>\n<li>Isolation<ul>\n<li>Concurrent transactions必不會互相影響</li>\n</ul>\n</li>\n<li>Consistency<ul>\n<li>在transaction完成之後, db state必須要是valid的</li>\n</ul>\n</li>\n<li>Durability<ul>\n<li>data written by a successful transaction must be recorded in persistent storage</li>\n</ul>\n</li>\n</ul>\n<p>其中, 有一些 <strong>Read Phenomena</strong> 會影響到 Isolation property:</p>\n<ul>\n<li>Dirty Read<ul>\n<li>一個transaction會讀到其他transaction uncommitted的data</li>\n</ul>\n</li>\n<li>Non-repeatable Read<ul>\n<li>一個transaction重複讀了兩次data卻發現data被修改過(by another <strong>committed</strong> transaction)</li>\n</ul>\n</li>\n<li>Phantom(幻象) Read<ul>\n<li>一個transaction重複搜尋了兩次相同的條件卻得到不同的rows (due to another recently <strong>committed</strong> transaction)</li>\n</ul>\n</li>\n<li>serialization anomaly<ul>\n<li>若將所有的transaction sequentially run, 不可能會得到正確的結果</li>\n</ul>\n</li>\n</ul>\n<p>4 Standard <strong>Isolation Levels</strong> are defined by ANSI:</p>\n<ul>\n<li>Read uncommitted<ul>\n<li>可以看到尚未被commit的data</li>\n</ul>\n</li>\n<li>Read Committed<ul>\n<li>只能看到被commit過後的data (avoid dirty read)</li>\n</ul>\n</li>\n<li>Repeatable read<ul>\n<li>一樣的select query會回傳同樣結果 (avoid non-repeatable &amp; phantom read)</li>\n</ul>\n</li>\n<li>serializable<ul>\n<li>保證serially的按照某種順序去跑transaction, 結果會跟concurrently跑的結果一樣</li>\n</ul>\n</li>\n</ul>\n<p>(MySQL)</p>\n<table>\n<thead>\n<tr>\n<th>Isolation Level</th>\n<th>Dirty Read</th>\n<th>Non-repeatable Read</th>\n<th>Phantom Read</th>\n<th>Serialization Anomaly</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Read Uncommitted</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Read Committed</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Repeatable Read</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Serializable</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody></table>\n<p>(PostgreSQL)</p>\n<table>\n<thead>\n<tr>\n<th>Isolation Level</th>\n<th>Dirty Read</th>\n<th>Non-repeatable Read</th>\n<th>Phantom Read</th>\n<th>Serialization Anomaly</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Read Uncommitted</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Read Committed</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Repeatable Read</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Serializable</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n</tr>\n</tbody></table>\n<p>MySQL v.s. PostgreSQL</p>\n<ul>\n<li><p>MySQL可以設置所有的transaction的isolation level, PostgreSQL只能設定一個transaction的isolation level</p>\n</li>\n<li><p>MySQL</p>\n<ul>\n<li><p>在serializable, mysql預設會把 SELECT 變成 SELECT FOR SHARE</p>\n<ul>\n<li>若transaction 1去 SELECT * from accounts where id &#x3D; 1, 則transaction 2要去update account id 1就會被block</li>\n</ul>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> accounts <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>; </span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">Transaction <span class=\"number\">2</span> would be blocked</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> accounts <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> account <span class=\"keyword\">set</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">10</span> <span class=\"keyword\">where</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">Dead lock would occur, since T2 <span class=\"keyword\">is</span> waiting T1 <span class=\"keyword\">to</span> <span class=\"keyword\">release</span> the lock, </span><br><span class=\"line\">while T1 <span class=\"keyword\">is</span> also waiting <span class=\"keyword\">to</span> T2</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>PostgreSQL</p>\n<ul>\n<li>read uncommitted 跟 read committed 一樣<ul>\n<li>read uncommitted 也不允許 dirty read</li>\n</ul>\n</li>\n<li>repeatable read 可以防止 phantom read</li>\n</ul>\n</li>\n<li><p>在serializable level 對付serialization anomaly 的方法</p>\n<ul>\n<li><p>PostgreSQL: dependency check, 若相同的query被其他transaction用過, 會發出error</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"built_in\">sum</span>(balance) <span class=\"keyword\">from</span> accounts; </span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> accounts(owner, balance, currency) <span class=\"keyword\">values</span> (<span class=\"string\">&#x27;sum&#x27;</span>, <span class=\"number\">810</span>, <span class=\"string\">&#x27;USD&#x27;</span>)</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> accounts(owner, balance, currency) <span class=\"keyword\">values</span> (<span class=\"string\">&#x27;sum&#x27;</span>, <span class=\"number\">810</span>, <span class=\"string\">&#x27;USD&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>; #success</span><br><span class=\"line\">T2:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T1:</span><br><span class=\"line\"></span><br><span class=\"line\">T2:</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>; #fail</span><br><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">T2 would fail <span class=\"keyword\">to</span> commit. </span><br><span class=\"line\">Since the same <span class=\"keyword\">insert</span> query has been queried <span class=\"keyword\">by</span> T2.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>MySQL: locking mechanism,  用share lock來避免兩個transaction會看到不同的data</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Retry Mechanism</p>\n<ul>\n<li>There might be errors, timeout or deadlocks</li>\n</ul>\n<p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html\">https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html</a></p>\n<p><a href=\"https://www.postgresql.org/docs/current/transaction-iso.html\">https://www.postgresql.org/docs/current/transaction-iso.html</a></p>\n"},{"title":"Simple Bank, Lecture 11 - RESTful API with GIN","date":"2023-04-17T12:14:37.000Z","_content":"\nRESTful API:\n\n- 代表符合REST規範的API\n- HTTP為REST的實做\n- Client-Server\n- Stateless\n- Cache\n- Uniform Interface\n- Layered System\n- Code-On-Demand\n\nHTTP Request Method\n\n- GET：從指定的資源中獲取信息（一個或多個子資源), 不會更動到內部資源\n    - Read\n- POST：向指定的資源提交要被處理的數據。\n    - Create\n- PUT：將指定的資源用請求中的數據替換(更新)\n    - Update\n- DELETE：刪除指定的資源。\n    - Delete\n\nmain.go\n\n- 連線至postgreSQL, 並在8080這個port上面聽取request\n\nserver.go\n\n- 將接收到的request透過GIN的router去呼叫對應的handler\n\naccount.go\n\n- 實作request的handler (跟account有關的, 像是POST ⇒ createAccount, GET ⇒ getAccount / listAccount)\n- 會呼叫account.sql.go裡的function來把data實際寫入到database裡面\n","source":"_posts/Simple-Bank-Lecture-11-RESTful-API-with-GIN.md","raw":"---\ntitle: Simple Bank, Lecture 11 - RESTful API with GIN\ndate: 2023-04-17 20:14:37\ntags: simple-bank, backend\n---\n\nRESTful API:\n\n- 代表符合REST規範的API\n- HTTP為REST的實做\n- Client-Server\n- Stateless\n- Cache\n- Uniform Interface\n- Layered System\n- Code-On-Demand\n\nHTTP Request Method\n\n- GET：從指定的資源中獲取信息（一個或多個子資源), 不會更動到內部資源\n    - Read\n- POST：向指定的資源提交要被處理的數據。\n    - Create\n- PUT：將指定的資源用請求中的數據替換(更新)\n    - Update\n- DELETE：刪除指定的資源。\n    - Delete\n\nmain.go\n\n- 連線至postgreSQL, 並在8080這個port上面聽取request\n\nserver.go\n\n- 將接收到的request透過GIN的router去呼叫對應的handler\n\naccount.go\n\n- 實作request的handler (跟account有關的, 像是POST ⇒ createAccount, GET ⇒ getAccount / listAccount)\n- 會呼叫account.sql.go裡的function來把data實際寫入到database裡面\n","slug":"Simple-Bank-Lecture-11-RESTful-API-with-GIN","published":1,"updated":"2023-04-17T12:15:37.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cx0005hhxg790k2kia","content":"<p>RESTful API:</p>\n<ul>\n<li>代表符合REST規範的API</li>\n<li>HTTP為REST的實做</li>\n<li>Client-Server</li>\n<li>Stateless</li>\n<li>Cache</li>\n<li>Uniform Interface</li>\n<li>Layered System</li>\n<li>Code-On-Demand</li>\n</ul>\n<p>HTTP Request Method</p>\n<ul>\n<li>GET：從指定的資源中獲取信息（一個或多個子資源), 不會更動到內部資源<ul>\n<li>Read</li>\n</ul>\n</li>\n<li>POST：向指定的資源提交要被處理的數據。<ul>\n<li>Create</li>\n</ul>\n</li>\n<li>PUT：將指定的資源用請求中的數據替換(更新)<ul>\n<li>Update</li>\n</ul>\n</li>\n<li>DELETE：刪除指定的資源。<ul>\n<li>Delete</li>\n</ul>\n</li>\n</ul>\n<p>main.go</p>\n<ul>\n<li>連線至postgreSQL, 並在8080這個port上面聽取request</li>\n</ul>\n<p>server.go</p>\n<ul>\n<li>將接收到的request透過GIN的router去呼叫對應的handler</li>\n</ul>\n<p>account.go</p>\n<ul>\n<li>實作request的handler (跟account有關的, 像是POST ⇒ createAccount, GET ⇒ getAccount &#x2F; listAccount)</li>\n<li>會呼叫account.sql.go裡的function來把data實際寫入到database裡面</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>RESTful API:</p>\n<ul>\n<li>代表符合REST規範的API</li>\n<li>HTTP為REST的實做</li>\n<li>Client-Server</li>\n<li>Stateless</li>\n<li>Cache</li>\n<li>Uniform Interface</li>\n<li>Layered System</li>\n<li>Code-On-Demand</li>\n</ul>\n<p>HTTP Request Method</p>\n<ul>\n<li>GET：從指定的資源中獲取信息（一個或多個子資源), 不會更動到內部資源<ul>\n<li>Read</li>\n</ul>\n</li>\n<li>POST：向指定的資源提交要被處理的數據。<ul>\n<li>Create</li>\n</ul>\n</li>\n<li>PUT：將指定的資源用請求中的數據替換(更新)<ul>\n<li>Update</li>\n</ul>\n</li>\n<li>DELETE：刪除指定的資源。<ul>\n<li>Delete</li>\n</ul>\n</li>\n</ul>\n<p>main.go</p>\n<ul>\n<li>連線至postgreSQL, 並在8080這個port上面聽取request</li>\n</ul>\n<p>server.go</p>\n<ul>\n<li>將接收到的request透過GIN的router去呼叫對應的handler</li>\n</ul>\n<p>account.go</p>\n<ul>\n<li>實作request的handler (跟account有關的, 像是POST ⇒ createAccount, GET ⇒ getAccount &#x2F; listAccount)</li>\n<li>會呼叫account.sql.go裡的function來把data實際寫入到database裡面</li>\n</ul>\n"},{"title":"Simple Bank, Lecture 12 - Load Config By Viper","date":"2023-04-17T14:28:25.000Z","_content":"\napp.env:\n\n- specify the environment variable\n- no need to hard coded in go files\n\nconfig.go\n\n- use viper to load config files in a given path\n- read the .env files\n\n","source":"_posts/Simple-Bank-Lecture-12-Load-Config-By-Viper.md","raw":"---\ntitle: Simple Bank, Lecture 12 - Load Config By Viper \ndate: 2023-04-17 22:28:25\ntags: simple-bank, backend\n---\n\napp.env:\n\n- specify the environment variable\n- no need to hard coded in go files\n\nconfig.go\n\n- use viper to load config files in a given path\n- read the .env files\n\n","slug":"Simple-Bank-Lecture-12-Load-Config-By-Viper","published":1,"updated":"2023-04-17T14:26:18.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cy0008hhxg2xei085e","content":"<p>app.env:</p>\n<ul>\n<li>specify the environment variable</li>\n<li>no need to hard coded in go files</li>\n</ul>\n<p>config.go</p>\n<ul>\n<li>use viper to load config files in a given path</li>\n<li>read the .env files</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>app.env:</p>\n<ul>\n<li>specify the environment variable</li>\n<li>no need to hard coded in go files</li>\n</ul>\n<p>config.go</p>\n<ul>\n<li>use viper to load config files in a given path</li>\n<li>read the .env files</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-04-15T14:00:55.160Z","updated":"2023-04-15T14:00:55.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgkz08cz0009hhxg1bw8cw3s","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clgkz08cp0000hhxg33jh8j3p","tag_id":"clgkz08cv0002hhxghshq17ic","_id":"clgkz08cy0007hhxgaesn3fau"},{"post_id":"clgkz08cy0008hhxg2xei085e","tag_id":"clgkz08cy0006hhxg21nn0073","_id":"clgkz08d1000bhhxg2kxfdudx"},{"post_id":"clgkz08ct0001hhxg9xe9bujn","tag_id":"clgkz08cy0006hhxg21nn0073","_id":"clgkz08d1000chhxg116bfc4e"},{"post_id":"clgkz08cw0003hhxg1v0d3t8s","tag_id":"clgkz08cy0006hhxg21nn0073","_id":"clgkz08d1000ehhxg53a71ihe"},{"post_id":"clgkz08cx0004hhxg1p5xcd4w","tag_id":"clgkz08cy0006hhxg21nn0073","_id":"clgkz08d2000ghhxg6gteh2jv"},{"post_id":"clgkz08cx0005hhxg790k2kia","tag_id":"clgkz08cy0006hhxg21nn0073","_id":"clgkz08d2000hhhxg74vz8k9q"}],"Tag":[{"name":"nvim","_id":"clgkz08cv0002hhxghshq17ic"},{"name":"simple-bank, backend","_id":"clgkz08cy0006hhxg21nn0073"}]}}